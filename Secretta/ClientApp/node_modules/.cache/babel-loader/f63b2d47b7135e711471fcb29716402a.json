{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joao.brandao\\\\Documents\\\\GitHub\\\\EEL418\\\\Secretta\\\\ClientApp\\\\src\\\\components\\\\MyTasks.js\";\nimport React, { Component } from 'react';\nexport class MyTasks extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Tasks: [],\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.populateTaskData();\n  }\n\n  static renderTasksTable(Tasks) {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      className: \"table table-striped\",\n      \"aria-labelledby\": \"tabelLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, \"Nome\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, \"Local\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, \"Cliente\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, \"Horario\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, Tasks.map(Task => /*#__PURE__*/React.createElement(\"tr\", {\n      key: Task.horario,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }, Task.nome), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }, Task.localidade), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }, Task.cliente), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 19\n      }\n    }, Task.horario, \".getFullYear()\")))));\n  }\n\n  render() {\n    let contents = this.state.loading ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 12\n      }\n    }, \"Loading...\")) : MyTasks.renderTasksTable(this.state.Tasks);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"tabelLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, \"Task\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, \"This component demonstrates fetching data from the server.\"), contents);\n  }\n\n  async populateTaskData() {\n    const response = await fetch('task/userid/2');\n    const data = await response.json();\n    this.setState({\n      Tasks: data,\n      loading: false\n    });\n  }\n\n}\nMyTasks.displayName = MyTasks.name;","map":{"version":3,"sources":["C:/Users/joao.brandao/Documents/GitHub/EEL418/Secretta/ClientApp/src/components/MyTasks.js"],"names":["React","Component","MyTasks","constructor","props","state","Tasks","loading","componentDidMount","populateTaskData","renderTasksTable","map","Task","horario","nome","localidade","cliente","render","contents","response","fetch","data","json","setState","displayName","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAGrCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,OAAO,EAAE;AAAtB,KAAb;AACD;;AAIDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,gBAAL;AACD;;AAED,SAAOC,gBAAP,CAAwBJ,KAAxB,EAA+B;AAC7B,wBACE;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAuC,yBAAgB,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,CADF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,KAAK,CAACK,GAAN,CAAUC,IAAI,iBACb;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,IAAV,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,IAAI,CAACG,UAAV,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,IAAI,CAACI,OAAV,CAHF,eAIM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,IAAI,CAACC,OAAV,mBAJN,CADD,CADH,CATF,CADF;AAsBD;;AAEDI,EAAAA,MAAM,GAAG;AACP,QAAIC,QAAQ,GAAG,KAAKb,KAAL,CAAWE,OAAX,gBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAH,CADW,GAEXL,OAAO,CAACQ,gBAAR,CAAyB,KAAKL,KAAL,CAAWC,KAApC,CAFJ;AAIA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,EAAE,EAAC,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oEAFF,EAGGY,QAHH,CADF;AAOD;;AAED,QAAMT,gBAAN,GAAyB;AACrB,UAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAD,CAA5B;AACF,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAAEjB,MAAAA,KAAK,EAAEe,IAAT;AAAed,MAAAA,OAAO,EAAE;AAAxB,KAAd;AACD;;AAzDoC;AAA1BL,O,CACJsB,W,GAActB,OAAO,CAACuB,I","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class MyTasks extends Component {\r\n  static displayName = MyTasks.name;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { Tasks: [], loading: true };\r\n  }\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    this.populateTaskData();\r\n  }\r\n\r\n  static renderTasksTable(Tasks) {\r\n    return (\r\n      <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nome</th>\r\n            <th>Local</th>\r\n            <th>Cliente</th>\r\n            <th>Horario</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Tasks.map(Task =>\r\n            <tr key={Task.horario}>\r\n              <td>{Task.nome}</td>\r\n              <td>{Task.localidade}</td>\r\n              <td>{Task.cliente}</td>\r\n                  <td>{Task.horario}.getFullYear()</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let contents = this.state.loading\r\n      ? <p><em>Loading...</em></p>\r\n      : MyTasks.renderTasksTable(this.state.Tasks);\r\n\r\n    return (\r\n      <div>\r\n        <h1 id=\"tabelLabel\" >Task</h1>\r\n        <p>This component demonstrates fetching data from the server.</p>\r\n        {contents}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async populateTaskData() {\r\n      const response = await fetch('task/userid/2');\r\n    const data = await response.json();\r\n    this.setState({ Tasks: data, loading: false });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}